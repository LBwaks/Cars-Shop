"""
Django settings for MotoCar project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
from pickle import TRUE
from re import T
import environ
from pathlib import Path
import sweetify
import os
from twilio.rest import Client
from decouple import config
import dj_database_url
from dotenv import load_dotenv,find_dotenv
import django_on_heroku




env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent



# Application definition

INSTALLED_APPS = [
    "whitenoise.runserver_nostatic",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.humanize',

    #installed apps
    "crispy_forms",
    "crispy_bootstrap5",
    'ckeditor',
    'hitcount',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django_filters',
    'paypal.standard.ipn',
    'phonenumber_field',
    'sweetify',
    'django_cleanup.apps.CleanupConfig',
    "debug_toolbar",
    'django_twilio',
    'django_extensions',




#  apps createted by developer 
    'Cars',
    'Pages',
    'Profiles',
    'Bids',
]


sweetify.DEFAULT_OPTS={
    'showConfirmButton':TRUE,
    'timer':2500,
    'allowOutsideClick':TRUE,
    'confirmButtonText':'OK',
}

PAYPAL_RECEIVER_EMAIL ='sb-j50hn17149329@personal.example.com'
PAYPAL_TEST =True

DJANGORESIZED_DEFAULT_SIZE = [640, 480]
# DJANGORESIZED_DEFAULT_SCALE = 0.5
DJANGORESIZED_DEFAULT_QUALITY = 75
DJANGORESIZED_DEFAULT_KEEP_META = True
DJANGORESIZED_DEFAULT_FORCE_FORMAT = 'JPEG'
DJANGORESIZED_DEFAULT_FORMAT_EXTENSIONS = {'JPEG': ".jpg"}
DJANGORESIZED_DEFAULT_NORMALIZE_ROTATION = True

CONTENT_TYPES = ['image',]
# 2.5MB - 2621440
# 5MB - 5242880
# 10MB - 10485760
# 20MB - 20971520
# 50MB - 5242880
# 100MB - 104857600
# 250MB - 214958080
# 500MB - 429916160
MAX_IMAGE_UPLOAD_SIZE = 5242880
MAX_CAR_IMAGE_UPLOAD_SIZE = 10485760


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
PHONENUMBER_DB_FORMAT = 'NATIONAL'
PHONENUMBER_DEFAULT_REGION = 'KE'
SWEETIFY_SWEETALERT_LIBRARY = 'sweetalert2'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source']
        ],
        # 'width': '100%'
    },
}

MIDDLEWARE = [
   
    'django.middleware.security.SecurityMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'csp.middleware.CSPMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',    
    # "whitenoise.middleware.WhiteNoiseMiddleware",
    
]
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

ROOT_URLCONF = 'MotoCar.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR.joinpath('templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
                'recent_vehicles':'Cars.templatetags.recent_vehicles',
                'vehicle_categories':'Cars.templatetags.vehicle_categories',
                'popular_vehicles':'Cars.templatetags.popular_vehicles',
            },
        },
    },
]

WSGI_APPLICATION = 'MotoCar.wsgi.application'




account_sid = 'AC9287fcbe5e65979be825a87a5b835654'
auth_token = '40e7af4e722d4d536b3952b87ee593b9'
client = Client(account_sid, auth_token)



# client id :
# client secret :
# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'motocar',
#         'USER':'postgres',
#         'PASSWORD':'23C00K1E5',
#         'HOST':'localhost',
#     }
# }
load_dotenv(find_dotenv())
DATABASES ={
    'default':
    dj_database_url.config(default='postgres://postgres:23C00K1E5@localhost/motocar',conn_max_age=600)
}
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }

AUTHENTICATION_BACKENDS = [
   
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    
]
SITE_ID = 2
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
LOGIN_REDIRECT_URL='cars'
ACCOUNT_SIGNUP_REDIRECT_URL ='add_profile'
ACCOUNT_EMAIL_REQUIRED = True 
ACCOUNT_AUTHENTICATION_METHOD ='username_email'
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
ACCOUNT_SESSION_REMEMBER= None
SOCIALACCOUNT_PROVIDERS = {
    'google': {
      
        'APP': {
            'client_id': '1007036441405-nuj4ie8itk59pn0devtsgil1sv6ed714.apps.googleusercontent.com',
            'secret': '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',
            'key': ''
        }
    }
   
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = env('EMAIL_HOST')
EMAIL_HOST = config('EMAIL_HOST', default='localhost')
# EMAIL_PORT = 587
EMAIL_PORT = config('EMAIL_PORT',  cast=int)
# EMAIL_USE_TLS = True
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
# EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_USER = config('EMAIL_HOST_USER',)
# EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', )
# RECIPIENT_ADDRESS = env('RECIPIENT_ADDRESS')
# DEFAULT_FROM_EMAIL='webmaster@localhost'
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', )
RECIPIENT_ADDRESS = config('RECIPIENT_ADDRESS', )

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"
import os.path
STATIC_URL = '/static/'
STATIC_ROOT =os.path.join(BASE_DIR / 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# django_on_heroku.settings(locals())

# media settings
MEDIA_ROOT = os.path.join(BASE_DIR /'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


       # security settings

# after https is configured 
# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True

# # content security policy
# CSP_DEFAULT_SRC=("'self'",)
# CSP_STYLE_SRC=("'self'",)
# CSP_SCRIPT_SRC=("'self'",)
# CSP_IMG_SRC=("'self'",)
# CSP_FONT_SRC=("'self'",)

# # http sttrict transport security
# SECURE_HSTS_SECONDS = 0
# SECURE_HSTS_INCLUDE_SUBDOMAINS =True
# SECURE_HSTS_PRELOAD = True 

# # SECURE SSL REDIRECT
# SECURE_SSL_REDIRECT =True


# from decouple import config
# SECRET_KEY = config('SECRET_KEY')
# DEBUG = config('DEBUG', default=False, cast=bool)
# EMAIL_HOST = config('EMAIL_HOST', default='localhost')
# EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
# # coding: utf-8
# from decouple import config
# from unipath import Path
# from dj_database_url import parse as db_url


# BASE_DIR = Path(__file__).parent

# DEBUG = config('DEBUG', default=False, cast=bool)
# TEMPLATE_DEBUG = DEBUG

# DATABASES = {
#     'default': config(
#         'DATABASE_URL',
#         default='sqlite:///' + BASE_DIR.child('db.sqlite3'),
#         cast=db_url
#     )
# }

# TIME_ZONE = 'America/Sao_Paulo'
# USE_L10N = True
# USE_TZ = True

# SECRET_KEY = config('SECRET_KEY')

# EMAIL_HOST = config('EMAIL_HOST', default='localhost')
# EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
# EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
# EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)

# # ...